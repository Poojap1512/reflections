What happens when you initialize a repository? Why do you need to do it?

Initializing a repository makes it a git repository in order to allow git operations in future.


How is the staging area different from the working directory and the repository?
What value do you think it offers?

Staging area is different as it contains all the files that needed to be commited.

How can you use the staging area to make sure you have one commit per logical
change?

You can transfer one file to the staging area and commit rather than multiple files.


What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Branches help to add experimental or partially developed code apart from the main version.

How do the diagrams help you visualize the branch structure?

Diagrams help a lot in visualizing branch structure, the parents of commits and reachability.
It is very useful.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
Merging two branches together merges all the desired changes to get one final version of code.
Both branches are merged into a comon branch (into either one) the other label can be deleted.

What are the pros and cons of Git’s automatic merging vs. always doing merges
manually?
Git would need advanced machine learning features and would have committed machine errors.
Natural merging allows us to keep the desired changes, count for efficiency and accuracy and solve the conflicts.